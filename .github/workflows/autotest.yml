name: autotest
on:
  push:
    branches:
    - dev
  pull_request:
    branches:
    - dev
jobs:
  dynamics-checkout:
    runs-on: [self-hosted, linux]
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by ${{runner.name}}"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workspace, ${{ github.workspace }}, is now ready to test your code on the runner."
  straka-2d:
    runs-on: [self-hosted, linux]
    needs: [jupiter-juno-sampler, saturn-vla-inverter]
    steps:
      - name: patch code
        run : ./patch.py
      - name: configure problem
        run: ./configure.py $(head ./examples/2d.straka/straka.inp | grep configure | cut -d ' ' -f3-)
      - name: clean up libraries
        run: make clean
      - name: compile code
        run: make -j4
      - name: run simulation
        run: ./bin/straka.ex -i ./examples/2d.straka/straka.inp
      - name: combile outputs
        run: ./combine.py -o test
      - name: compare result
        run: ./examples/2d.straka/test.py straka-test-main.nc ./examples/2d.straka/output.nc
      - name: finalize
        run: rm -f combine_rules
      - run: echo "straka case (single core) is a ${{ job.status }}"
  shallow-water:
    runs-on: [self-hosted, linux]
    needs: straka-2d
    steps:
      - name: patch code
        run : ./patch.py
      - name: configure problem
        run: ./configure.py $(head ./examples/2d.shallow_water/shallow_water.inp | grep configure | cut -d ' ' -f3-)
      - name: clean up libraries
        run: make clean
      - name: compile code
        run: make -j4
      - name: run simulation
        run: mpiexec -n 16 ./bin/shallow_water.ex -i ./examples/2d.shallow_water/shallow_water.inp
      - name: combile outputs
        run: ./combine.py -o test
      - name: compare result
        run: ./examples/2d.shallow_water/test.py sw-test-main.nc examples/2d.shallow_water/output.nc
      - name: finalize
        run: rm -f combine_rules
      - run: echo "shallow water case (parallel) is a ${{ job.status }}."
  polar-vortex: 
    runs-on: [self-hosted, linux]
    needs: shallow-water
    steps:
      - name: patch code
        run : ./patch.py
      - name: configure problem
        run: ./configure.py $(head ./examples/2d.polar_vortex/fig_g_intruder.inp | grep configure | cut -d ' ' -f3-)
      - name: clean up libraries
        run: make clean
      - name: compile code
        run: make -j4
      - name: make case folder
        run: mkdir data
      - name: link auxiliary file
        run: ln -s ./examples/2d.polar_vortex/intruder_85.txt ./
      - name: run simulation
        run: mpiexec -n 16 ./bin/polar_vortex.ex -i ./examples/2d.polar_vortex/fig_g_intruder.inp
      - name: combile outputs
        run: ./combine.py -d data -o test
      - name: compare result
        run: ./examples/2d.polar_vortex/test.py data/intruder-test-main.nc examples/2d.polar_vortex/output.nc
      - name: finalize
        run: rm -f combine_rules
      - run: echo "polar vortex text case is a ${{ job.status }}."
  robert-2d:
    runs-on: [self-hosted, linux]
    needs: straka-2d
    steps:
      - name: patch code
        run : ./patch.py
      - name: configure problem
        run: ./configure.py $(head ./examples/3d.robert/robert2d.inp | grep configure | cut -d ' ' -f3-)
      - name: clean up libraries
        run: make clean
      - name: compile code
        run: make -j4
      - name: run simulation
        run: mpiexec -n 8 ./bin/robert.ex -i ./examples/3d.robert/robert2d.inp
      - name: combile outputs
        run: ./combine.py -o test
      - name: compare result
        run: ./examples/3d.robert/test.py robert-test-main.nc examples/3d.robert/output-2d.nc
      - name: finalize
        run: rm -f combine_rules
      - run: echo "robert case (parallel, vertical decomposition) is a ${{ job.status }}."
  robert-3d:
    runs-on: [self-hosted, linux]
    needs: robert-2d
    steps:
      - name: patch code
        run : ./patch.py
      - name: configure problem
        run: ./configure.py $(head ./examples/3d.robert/robert3d.inp | grep configure | cut -d ' ' -f3-)
      - name: clean up libraries
        run: make clean
      - name: compile code
        run: make -j4
      - name: run simulation
        run: mpiexec -n 32 ./bin/robert.ex -i ./examples/3d.robert/robert3d.inp
      - name: combile outputs
        run: ./combine.py -o test
      - name: compare result
        run: ./examples/3d.robert/test.py robert-test-main.nc examples/3d.robert/output-3d.nc
      - name: finalize
        run: rm -f combine_rules
      - run: echo "robert case (parallel, vertical decomposition, 3d) is a ${{ job.status }}."
# radiation tests
  radiation-checkout:
    runs-on: [self-hosted, linux]
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by ${{runner.name}}"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workspace, ${{ github.workspace }}, is now ready to test your code on the runner."
  jupiter-juno: 
    runs-on: [self-hosted, linux]
    needs: radiation-checkout
    steps:
      - name: patch code
        run : ./patch.py jupiter_juno
      - name: configure problem
        run: ./configure.py $(head ./examples/1d.jupiter_juno/juno_mwr.tmp | grep configure | cut -d ' ' -f3-)
      - name: clean up libraries
        run: make clean
      - name: compile code
        run: make -j4
      - name: link run script
        run: ln -s ./run_scripts/run_radio.py ./
      - name: run simulation
        run: ./run_radio.py -i ./examples/1d.jupiter_juno/juno_mwr.tmp --exe ./bin/juno_mwr.ex -o test
      - name: compare result
        run: diff -I ^# juno_mwr-test.out ./examples/1d.jupiter_juno/juno_mwr.out
      - name: finalize
        run: rm -f combine_rules run_radio.py juno_mwr-test*
      - run: echo "${{ github.job }} case is a ${{ job.status }}"
  jupiter-juno-sampler:
    runs-on: [self-hosted, linux]
    needs: jupiter-juno
    env:
      MYDIR: ./examples/1d.jupiter_juno
      INPUT: juno_mwr.tmp
    steps:
      - name: link combine file
        run: ln -s ${{ github.workspace }}/combine.py $MYDIR/
      - name: link run script
        run: ln -s ${{ github.workspace }}/run_scripts/run_radio.py $MYDIR/
      - name: link plotting scripts
        run: ln -s ${{ github.workspace }}/run_scripts/plot_*.py $MYDIR/
      - name: run simulation
        run: cd $MYDIR && ./run_radio.py -i $INPUT --exe=../../bin/juno_mwr.ex --nwalker=10 --nlim=10 -o test
      - name: make mcmc plot
        run: cd $MYDIR && ./plot_mcmc.py -i juno_mwr-test
      - name: make ammonia plot
        run: cd $MYDIR && ./plot_ammonia.py -i juno_mwr-test
      - run: echo "${{ github.job }} case is a ${{ job.status }}"
  jupiter-juno-inverter:
    runs-on: [self-hosted, linux]
    needs: jupiter-juno-sampler
    env:
      MYDIR: ./examples/1d.jupiter_juno
      INPUT: juno_mwr.tmp
      EXE: ../../bin/juno_mwr.ex
    steps:
      - name: link run script
        run: ln -s ${{ github.workspace }}/run_scripts/prepare_radio_synthetic.py $MYDIR/
      - name: perturb ammonia concentration at 6 pressure levels
        run: >
          cd $MYDIR &&
          ./run_radio.py -M -i $INPUT --exe=$EXE --plevel=50:0.5:6 --nh3="-0.1 -0.2 -0.3 -0.4 -0.3 -0.2" -o n6
      - name: prepare synthetic differential(d) observation
        run: >
          cd $MYDIR &&
          ./prepare_radio_synthetic.py -i juno_mwr-n6 -d
      - name: run nh3-inversion model at 8 pressure levels
        run: >
          cd $MYDIR &&
          ./run_radio.py -M -d -i $INPUT --exe=$EXE --plevel=50:0.5:8 --nlim=250 --nwalker=12 --obs=juno_mwr-n6.dobs -o n6p8
      - name: make mcmc plot
        run: cd $MYDIR && ./plot_mcmc.py -i juno_mwr-n6p8
      - name: make ammonia plot
        run: cd $MYDIR && ./plot_ammonia.py -i juno_mwr-n6p8 --truth=juno_mwr-n6
      - run: echo "${{ github.job }} case is a ${{ job.status }}"
  saturn-vla: 
    runs-on: [self-hosted, linux]
    needs: radiation-checkout
    steps:
      - name: patch code
        run : ./patch.py saturn_vla
      - name: configure problem
        run: ./configure.py $(head ./examples/1d.saturn_vla/vla_saturn.tmp | grep configure | cut -d ' ' -f3-)
      - name: clean up libraries
        run: make clean
      - name: compile code
        run: make -j4
      - name: link run script
        run: ln -s ./run_scripts/run_radio.py ./
      - name: run simulation
        run: ./run_radio.py -i ./examples/1d.saturn_vla/vla_saturn.tmp --exe ./bin/saturn_vla.ex -o test
      - name: compare result
        run: diff -I ^# vla_saturn-test.out ./examples/1d.saturn_vla/vla_saturn.out
      - name: finalize
        run: rm -f combine_rules run_radio.py vla_saturn-test*
      - run: echo "${{ github.job }} case is a ${{ job.status }}"
  saturn-vla-sampler:
    runs-on: [self-hosted, linux]
    needs: saturn-vla
    env:
      MYDIR: ./examples/1d.saturn_vla
      INPUT: vla_saturn.tmp
    steps:
      - name: link combine file
        run: ln -s ${{ github.workspace }}/combine.py $MYDIR/
      - name: link run script
        run: ln -s ${{ github.workspace }}/run_scripts/run_radio.py $MYDIR/
      - name: link plotting scripts
        run: ln -s ${{ github.workspace }}/run_scripts/plot_*.py $MYDIR/
      - name: run simulation
        run: cd $MYDIR && ./run_radio.py -i $INPUT --exe=../../bin/saturn_vla.ex --nwalker=10 --nlim=10 -o test
      - name: make mcmc plot
        run: cd $MYDIR && ./plot_mcmc.py -i vla_saturn-test
      - name: make ammonia plot
        run: cd $MYDIR && ./plot_ammonia.py -i vla_saturn-test
      - run: echo "${{ github.job }} case is a ${{ job.status }}"
  saturn-vla-inverter:
    runs-on: [self-hosted, linux]
    needs: saturn-vla-sampler
    env:
      MYDIR: ./examples/1d.saturn_vla
      INPUT: vla_saturn.tmp
      EXE: ../../bin/saturn_vla.ex
    steps:
      - name: link run script
        run: ln -s ${{ github.workspace }}/run_scripts/prepare_radio_synthetic.py $MYDIR/
      - name: perturb ammonia concentration at 6 pressure levels
        run: >
          cd $MYDIR &&
          ./run_radio.py -M -i $INPUT --exe=$EXE --plevel=50:0.5:6 --nh3="-0.1 -0.2 -0.3 -0.4 -0.3 -0.2" -o n6
      - name: prepare synthetic differential(d) observation
        run: >
          cd $MYDIR &&
          ./prepare_radio_synthetic.py -i vla_saturn-n6 -d
      - name: run nh3-inversion model at 8 pressure levels
        run: >
          cd $MYDIR &&
          ./run_radio.py -M -d -i $INPUT --exe=$EXE --plevel=50:0.5:8 --nlim=250 --nwalker=12 --obs=vla_saturn-n6.dobs -o n6p8
      - name: make mcmc plot
        run: cd $MYDIR && ./plot_mcmc.py -i vla_saturn-n6p8
      - name: make ammonia plot
        run: cd $MYDIR && ./plot_ammonia.py -i vla_saturn-n6p8 --truth=vla_saturn-n6
      - run: echo "${{ github.job }} case is a ${{ job.status }}"
